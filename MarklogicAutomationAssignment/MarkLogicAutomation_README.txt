#MarkLogic_Automation
---------------------

Automating marklogic application which includes the following flow:
1) Open Query Console and execute a query to create a database and a forest.
2) Verify the output shown when the query is been executed.
3) Insert some data in the database created, using a query in Query Console itself.
4) Now move to admin page, open the database created, and check the count of the documents which are inserted on the status page. 


#Prerequisites
--------------

Install marklogic server and create a database and an application server from the admin interface.


#Project
--------

This is a maven project built in TestNG framework using java language and selenium webDriver.

#Steps To Follow:
-----------------

Import the Marklogic project in your eclipse or download the Marklogic project in your eclipse-workspace path and run the testng.xml as TestNG suite. 


#Directory_Structure
--------------------

* Under src/test/java folder,there is a BaseTest class file inside Base package in which some methods are defined which are used in the test case file for performing the automation flow,like setting up properties files,clicking on webelement,entering data,etc.

 Methods defined in BaseTest class:

 click(String key) -- This method will be called whenever we wants to click on any webelement whose locators will be stored in OR.property file
 type(String key, String value) -- This method will be called whenever we wants to enter some value in an element,whose key(locator) and value(data to be entered) will be stored in OR.property file
 select(String key, String value) -- This method will be called whenever we wants to interact with the element with select tag like for dropdown elements
 text(String key) -- This method will be called whenever we want to getText from an element
 setup() -- This method will be called BeforeSuite for setting up the properties file and will navigate to the url which is defined in the config.properties file
 close() -- This method will be called AfterSuite which will close the browser after test execution

* Under src/test/java folder,there is a CreatingDbAndForest class file inside TestCases package which inherits BaseTest, this class includes four test cases:

 1) createDbAndForest -- This will create a database and a forest from query console using javascript query
 2) verifyOutput -- In this case we will be verifying the response which was generated by the createDbAndForest query,if the database and the forest are created successfully or not.
 3) InsertData -- In this case we will be inserting the data inside the database using query console which was created in the first step.
 4) validateAdminInterface -- In this case we wil be validating the document count from the admin interface which were uploaded in the database in the third step.

* Under src/test/resources, there is logs folder in which the log file is created after every test run as app_date_txt files

* Under src/test/resources, there is a Utilities package, having shakespeare.2.00.xml folder which contains all the shakespeare's play in xml format

* Under src/test/resources, there is a properties package which includes 3 properties files:
 1) Config.properties -- some configuration like browser name,admin and query console url are defined in this property file
 2) OR.properties -- This is a object repository file which contains all the webelements on which we have to perform some actions.
 3) log4j.properties -- This is a config file for log4j logger which we have used for generating logs during test execution.

* Under MavenDependies, all the jars are present which we have defined in the pom.xml file which are used in this project.

* In testng.xml we have defined a suite which will run all the test cases present in the CreatingDbAndForest class


#CreatingDbAndForest class flow:
--------------------------------

-First driver will navigate to http://localhost:8000/qconsole/ (query console window), authentication will be donw with username:admin and password:admin 
Note: If the username and password is different then u can specify it in Config.properties file in consoleurl and adminurl http://username:password@localhost:8000/qconsole/
-WebDriver will wait for 20 secs till the query text box is not interactable(used explicit wait)
-Using select method(defined in BaseTest), qurery type as "javascript" will be selected from the drop down menu.
NOTE: Query type from the dropdown list can be changes to xquery/any other type by changing value of "dropdownValue" in OR.property file 
-Using javascript executor, query is passed in query text filed for creating database and forest  
NOTE: The database and the forest will be created with unique name every time the query is runned as this is concatinated with date string as db_(current_date_time) and forest_(current_date_time)
-After passing the query in query text field it will call click() method which will click on Run button(whose id is defined in OR.property file) and will wait till the response comes for the query
-Now the Response is stored in an output string which will be compared with the expected string(for successfull response) using assertion
-Now the page is refreshed and will wait till the element dropdown is not interactable
-After refreshing, database name which is created using query console will be selected for updating data in it,this will be selected from the dropdown menu by visible text as we have stored the database name in DBNAME variable
-Now again using javascriptExecutor, query for uploading the documents(which is stored in query variable as String type) is passed in query text field
NOTE: path of the document is stored in the path variable as "user.dir"(at the path where the project is downloaded)+"/src/test/java/Utilities/shakespeare.2.00.xml";
-Now the click() method is called for clicking on Run button which will wait till the response of the query is shown
-Now browser will to admin interface "http://localhost:8001/default.xqy" with authentication admin:admin, the url is defined in the Config.property file
-Now the driver will click on the database name which was created on the query console window 
-Now after navigating to status tab,count of the total documents will be shown in the log file
  


 